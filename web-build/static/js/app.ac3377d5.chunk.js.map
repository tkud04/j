{"version":3,"sources":["RootNavigation.js","Helpers.js","contexts/UserContext.js","navigation/LoginScreen.js","components/HeaderBar.js","navigation/AuthStack.js","navigation/HomeScreen.js","navigation/AppStack.js","navigation/MoreScreen.js","navigation/MoreStack.js","App.js","assets/header.jpeg"],"names":["navigationRef","createNavigationContainerRef","jarvisAlert","dt","showMessage","save","key","value","a","async","Platform","OS","localStorage","setItem","SecureStore","getValueFor","result","getItem","_urlEncode","Object","entries","map","k","v","encodeURIComponent","join","UserContext","createContext","UserProvider","Provider","Consumer","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","paddingLeft","validation","fontSize","fontWeight","color","loginLogo","marginTop","marginLeft","Dimensions","get","width","loginText","loginButton","padding","loginButtonText","LoginScreen","request","ctx","useContext","useState","buttonBackground","setButtonBackground","buttonTextColor","setButtonTextColor","hasCode","setHasCode","setDiscovery","_updateUser","setAtk","atk","setRtk","rtk","setU","u","setLoggedIn","Auth0_Domain","useProxy","select","web","default","redirectUri","AuthSession","disc","oauthPayload","promptAsync","useEffect","authPayload","clientId","responseType","Code","scopes","extraParams","audience","prompt","Login","authorizationEndpoint","params","error","helpers","type","message","error_description","code","grant_type","client_id","redirect_uri","code_verifier","codeVerifier","url","req","Request","method","headers","body","fetch","then","response","status","json","catch","console","log","hasOwnProperty","setTimeout","refresh_token","req2","response2","dt3","Authorization","access_token","response3","userInfo","JSON","stringify","View","style","MaterialCommunityIcons","name","size","Text","Pressable","onPress","IconButton","props","action","pressed","bgcolor","iconButton","flexDirection","justifyContent","borderBottomWidth","hc","height","overflow","newButton","profileButton","logoView","logoText","HeaderBar","l","Image","source","require","Stack","createStackNavigator","AuthStack","Navigator","initialRouteName","screenOptions","Screen","component","options","title","titleBar","itemsLayout","column","formGroup","HomeScreen","navigation","AppStack","headerTitle","item","caption","centeredView","modalText","marginBottom","textAlign","modalView","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","button","MoreScreen","isSMVisible","setIsSMVisible","button1TextColor","setButton1TextColor","button1Background","setButton1Background","items","btn","play","i","marginRight","Modal","animationType","transparent","visible","onRequestClose","MoreStack","Tab","createMaterialBottomTabNavigator","App","setIsAppReady","showApp","setShowApp","loggedIn","etk","setEtk","online","setOnline","setNotification","notificationListener","useRef","responseListener","s","subscribeToNetworkChanges","NetInfo","addEventListener","state","isInternetReachable","firstView","uu","parse","Promise","resolve","e","warn","prepare","token","Constants","isDevice","Notifications","existingStatus","finalStatus","data","err","importance","MAX","vibrationPattern","lightColor","current","notification","irn","NavigationContainer","ref","activeColor","inactiveColor","barStyle","tabBarLabel","tabBarIcon","StatusBar","position","translucent","keyExtractor","renderItem","ii","webStyle","slide","bg","icon","copy","bottomButton","showSkipButton","showPrevButton","onDone","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","WebBrowser","paddingBottom","module","exports"],"mappings":"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","file":"static/js/app.ac3377d5.chunk.js","sourcesContent":["import { createNavigationContainerRef } from '@react-navigation/native';\n\nexport const navigationRef = createNavigationContainerRef()\n\nexport function navigate(name, params) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(name, params);\n  }\n}\n\n// add other navigation functions that you need and export them","import React, { useState, useEffect } from 'react';\nimport { Platform, StyleSheet, View, Text, Alert} from 'react-native';\nimport * as SecureStore from 'expo-secure-store';\nimport * as AuthSession from 'expo-auth-session';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport { useNavigation } from '@react-navigation/native';\nimport * as RootNavigation from './RootNavigation.js';\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\n\nexport const API = \"\";\n\n\nexport function tryParseJSON(jsonString){\n    try {\n        var o = JSON.parse(jsonString);\n\n        // Handle non-exception-throwing cases:\n        // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n        // but... JSON.parse(null) returns null, and typeof null === \"object\", \n        // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n        if (o && typeof o === \"object\") { \n            return o;\n        }\n    }\n    catch (e) { }\n\n    return false;\n}\n\nexport function jarvisAlert(dt)\n{\n  showMessage(dt);\n}\n\nexport async function save(key, value) {\n  if(Platform.OS == \"web\"){\n     localStorage.setItem(key,value);\n  }\n  else{\n     await SecureStore.setItemAsync(key, value);\n  }\n}\n\nexport async function getValueFor(key) {\n  let result = null;\n\n  if(Platform.OS == \"web\"){\n    result = localStorage.getItem(key);\n  } \n  else{\n    result = await SecureStore.getItemAsync(key);\n  }\n\n  return result;\n}\n\nexport async function remove(key) {\n  await SecureStore.deleteItemAsync(key);\n}\n\nexport async function tryLogin() {\n\tlet ret = null;\n  /**\n  ret = AuthSession.startAsync({\n    authUrl: `${Auth0_Domain}?client_id=${Auth0_ClientID}&redirect_uri=${redirectUri}`\n  });\n  **/\n\t\n  return ret;\n}\n\nexport function _urlEncode(dt){\n\t\tconst fd = Object.entries(dt).map(\n\t\t\t([k,v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`\n\t\t).join(\"&\");\n\t\treturn fd;\n}\n\nexport async function setCredentials(dt) {\n\tawait Keychain.setGenericPassword(dt.u,dt.p);\n}\n\nexport function serializeJSON(data) {\n  return Object.keys(data).map(function (keyName) {\n    return encodeURIComponent(keyName) + '=' + encodeURIComponent(data[keyName])\n  }).join('&');\n}\n\nexport async function schedulePushNotification() {\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: \"You've got mail! 📬\",\n      body: 'Here is the notification body',\n      data: { data: 'goes here' },\n    },\n    trigger: { seconds: 2 },\n  });\n}\n\nexport async function registerForPushNotificationsAsync() {\n  let token = \"\", cid = Constants.isDevice;\n\n  if (cid) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n\t\t  // alert(`In registerForPushNotificationsAsync(), finalStatus = ${finalStatus}`);\n    if (finalStatus == 'granted') {\n      Notifications.getExpoPushTokenAsync()\n\t  .then(data => {\n\t\t  //alert(`In getExpoPushTokenAsync(), data = ${data}`);\n\t\t // console.log(` data: `,data);\n\t\t  token = data.data;\n\t\t  \tsave('pa_etk',token); \n\t  })\n\t  .catch(err => {\n\t\t // alert(`In getExpoPushTokenAsync(), err = ${err}`);\n\t  });\n    }\n\telse {\n\t\t//alert('Failed to get push token for push notification!');\n\t}\n    \n    //console.log(token);\n  } else {\n    //alert('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n  \n  //alert(`In registerForPushNotificationsAsync(), token: ${token}`);\n  return token;\n}\n\nexport function findItem(l,x){\n\tconsole.log(\"[l,x]: \",[l,x]);\n\treturn l.find(i => i.id == x);\n}\n\nexport function wvParse(s){\n\t let r = \"\";\n\t const regex = /(html)|(device-width)/;\n\t let sr = s.search(regex);\n\t   // console.log('sr: ',sr);\n\t if(sr == -1){\n\t\t r = `\n\t\t <html xmlns=\"http://www.w3.org/1999/xhtml\">\n  <head>\n  </head>\n  <body style=\"max-width:100%; width:100%;background-color:white;\">\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\" />\n    <meta name=\"color-scheme\" content=\"only\" />\n\t${s}\n\t</body>\n\t</html>\n\t\t `;\n\t }\n\t else{\n\t\t r = s;\n\t }\n\t return r;\n }\n\nexport async function clearStorage(){\n\tawait remove(\"tembo_current_u\");\n}\n","import React,{createContext} from 'react';\nconst UserContext = createContext({});\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;\nexport default UserContext;","import React, { useState, useEffect, useContext } from 'react';\nimport { Platform, Pressable, StyleSheet, View, Text, TextInput, Dimensions } from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as AuthSession from 'expo-auth-session';\nimport * as helpers from '../Helpers';\nimport UserContext from '../contexts/UserContext';\n\n\nfunction LoginScreen(){\n\tconst ctx = useContext(UserContext);\n    const [buttonBackground,setButtonBackground] = useState(\"#77f\");\n\tconst [buttonTextColor,setButtonTextColor] = useState(\"#fff\");\n\tconst [tryLogin,setTryLogin] = useState(true);\n\tconst [hasCode,setHasCode] = useState(false);\n\tconst [discovery,setDiscovery] = useState(null);\n\t//const [authPayload,setAuthPayload] = useState(null);\n\n\n    const _updateUser = (dt) => {\n\t\t         ctx.setAtk(dt.atk);\n\t\t\t\t ctx.setRtk(dt.rtk);\n\t\t         ctx.setU(dt.u);\n\t\t         ctx.setLoggedIn(true);\n\t}\n\n     const requestNewAccessTokenBuffer = 5 * 1000;\n\t //Development config\n    const Auth0_Domain = \"https://pensionjar-development.eu.auth0.com\";\n    const Auth0_ClientID = \"LFi1MZQxXQW4Y1vMhEOXN7Sy11naYTcF\";\n\tconst Auth0_ClientSecret = \"b8fUvWYThhkLxOf4d_UsGLBayfl1pCnQTkll9U8qtHrB6VPyFsfeIH7CRdcKhh9-\";\n\n\t/**\n\t//Staging config\n    const Auth0_Domain = \"https://pensionjar-staging.eu.auth0.com\";\n    const Auth0_ClientID = \"PAQK5rFTPu2jdg2rSM4I0Nwjcwk8XWkI\";\n\tconst Auth0_ClientSecret = \"_-NCxLhpJlg5q8J6K2LYKyi_1CNu8uwbrU-X0s3IkxiLj3jhCjF37FdquZK78gUM\";\n    **/\n\n\tconst authorizationEndpoint = `${Auth0_Domain}/authorize`;\n\tconst oauthEndpoint = `${Auth0_Domain}/oauth/token`;\n\n    const useProxy = Platform.select({ web: false, default: true });\n    const redirectUri = AuthSession.makeRedirectUri({ useProxy });\n\tlet disc = null, auth0 = null, oauthPayload = null,\n\t    request = null, result = null, promptAsync = null;\n    \n\tuseEffect(async () => {\n\t  if(!hasCode){\n\t\tsetHasCode(true);\n\t\tdisc = await AuthSession.fetchDiscoveryAsync(Auth0_Domain);\n\t\tsetDiscovery(disc);\n\t  }\n\t});\n\t\n\tconst authPayload = {\n\t\tredirectUri: redirectUri,\n\t\tclientId: Auth0_ClientID,\n\t\tresponseType: AuthSession.ResponseType.Code,\n\t\t// retrieve the user's profile\n\t\tscopes: [\"openid\", \"profile\", \"offline_access\"],\n\t\textraParams: {\n\t\t  // ideally, this will be a random value\n\t\t  audience: `${Auth0_Domain}/api/v2/`\n\t\t},\n\t\tprompt: AuthSession.Prompt.Login\n\t  };\n\n\t [request, result, promptAsync] = AuthSession.useAuthRequest(\n\t\tauthPayload,\n\t\t{ authorizationEndpoint }\n\t  );\n    \n\n\t// Retrieve the redirect URL, add this to the callback URL list\n\t  // of your Auth0 application.\n\t  //console.log(`Redirect URL: ${redirectUri}`);\n\t  \n\n\t  useEffect(async () => {\n\t\tif (result) {\n\t\t\tlet params = result.params;\n\t\t  if (result.error) {\n\t\t\thelpers.jarvisAlert({\n\t\t\t  type: \"danger\",\n\t\t\t  message: result.params.error_description || \"Something went wrong..\"\n\t\t\t});\n\t\t\treturn;\n\t\t  }\n\t\t  if (result.type && result.type == \"dismiss\") {\n\t\t\thelpers.jarvisAlert({\n\t\t\t  type: \"danger\",\n\t\t\t  message: \"Your login attempt was dismissed.\"\n\t\t\t});\n\t\t\treturn;\n\t\t  }\n\t\t  if(params.code){\n\t\t\t//Exchange the authorization code for access and id tokens\n\t\t\n\t\t\t//Send POST request\n           \n\t\t\t oauthPayload = {\n               grant_type: \"authorization_code\",\n\t\t\t   client_id: Auth0_ClientID,\n\t\t\t   redirect_uri: redirectUri,\n\t\t\t   code: params.code,\n\t\t\t   code_verifier: request.codeVerifier\n\t\t\t};\n\n\t\t\t\n\t\t\t//create request\n\t\t\tlet url = `${Auth0_Domain}/oauth/token`, dest = \"\";\n\t\t\t\t   \n\t\t\tconst req = new Request(url,{\n\t\t\t\tmethod: 'POST', \n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t  },\n\t\t\t\tbody: helpers._urlEncode(oauthPayload)\n\t\t\t});\n\t\t\t\n\t\t\t//fetch request\n\t\t\tfetch(req)\n\t\t\t   .then(response => {\n\n\t\t\t\t     if(response.status === 200){\n\t\t\t\t\t   return response.json();\n\t\t\t\t   }\n\t\t\t\t   else{\n\t\t\t\t\t   return {status: \"error\", message: \"Technical error\"};\n\t\t\t\t   }\n\t\t\t\t   \n\t\t\t   })\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(\"Failed first to fetch token: \",error);\t\n\t\t\t   })\n\t\t\t   .then(dt => {\t\n\t\t\t\tconsole.log(\"dt: \",dt);\t\t\t  \n                   if(dt.hasOwnProperty('status') && dt.status == \"error\"){\n\t\t\t\t\thelpers.jarvisAlert({\n\t\t\t\t\t\ttype: \"danger\",\n\t\t\t\t\t\tmessage: `There was an issue with verifying your identity, please try again.`\n\t\t\t\t\t  });\n\t\t\t\t   }\n\t\t\t\t   else{\n\t\t\t\t\t   try{\n\t\t\t\t       // Refetch the access token before it expires\n\t\t\t\t\t   setTimeout(async () => {\n\t\t\t\t\t\t\t     oauthPayload.refresh_token = dt.refresh_token;\n\t\t\t\t\t\t\t     oauthPayload.grant_type = \"refresh_token\";\n\t\t\t\t\t\t\t     const req2 = new Request(url,{\n\t\t\t\t\t\t\t     \tmethod: 'POST', \n\t\t\t\t\t\t\t\t    headers: {\n\t\t\t\t\t\t\t\t\t   'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\t\t\t    },\n\t\t\t\t\t\t\t\t    body: helpers._urlEncode(oauthPayload)\n\t\t\t\t\t\t\t       });\n\t\t\t\t\t\t\t     let response2 = await fetch(req2);\n\t                             let dt3 = await response2.json();\n\t\t\t\t\t\t\t\t console.log(\"dt3: \",dt3);\n\n\t\t\t\t\t\t\t //Get the user info\n\t\t\t\t\t\t\t let url3 = `${Auth0_Domain}/userinfo`;\n\t\t\t\t\t\t\t const response3 = await fetch(url3, {\n                                   headers: { Authorization: `Bearer ${dt3.access_token}` },\n                                });\n\t\t\t\t\t\t\t\tlet userInfo = await response3.json();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * userInfo:  Object {\n  \"family_name\": \"Kudayisi\",\n  \"given_name\": \"Tobi\",\n  \"locale\": \"en\",\n  \"name\": \"Tobi Kudayisi\",\n  \"nickname\": \"kkudayisitobi\",\n  \"picture\": \"https://lh3.googleusercontent.com/a/AATXAJwsgNCE_3KJN2N4snvDa8x71K6aZylHKSqVKTcP=s96-c\",\n  \"sub\": \"google-oauth2|106248341049286054892\",\n  \"updated_at\": \"2022-01-15T18:10:44.875Z\",\n}\n\t\t\t\t\t\t\t\t *  **/\n                             \n                              //Save user info, access token, refresh token and update user context\n\t\t\t\t\t\t\t  //[YOU ARE HERE: START]\n\t\t\t\t\t\t\t  helpers.save('pa_atk',dt3.access_token);\n\t\t\t\t\t\t\t  helpers.save('pa_rtk',dt.refresh_token);\n\t\t\t\t\t\t\t  helpers.save('pa_u',JSON.stringify(userInfo));\n\n\t\t                      _updateUser({\n\t\t\t\t\t              u: userInfo,\n\t\t\t\t\t              atk: dt3.access_token,\n\t\t\t\t\t              rtk: dt.refresh_token\n\t\t\t\t              });\n\n                     //[YOU ARE HERE: END]\n\t\t\t\t\t        },requestNewAccessTokenBuffer);\n\t\t\t\t\t   }\n\t\t\t\t\t   catch(error){\n\t\t\t\t\t\t   console.log(\"error in try block: \",error);\n\t\t\t\t\t   }\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t   }).catch(error => {\n\t\t\t\t\tconsole.log(\"Failed to fetch tokens: \",error);\n\t\t\t   });\n\t\t  }\n\t    }\n\t  }, [result]);\n\n    \n\n\treturn (\n\t   <View style={styles.container}>\n\t\t   <View style={styles.loginLogo}>\n\t\t     <MaterialCommunityIcons name=\"login\" color=\"#77f\" size={200} />\n\t\t   </View>\n\n\t\t   <View>\n\t\t      <Text style={styles.loginText}>You need to login to continue to Jarvis. Click the button below when you're ready!</Text>\n\t\t   </View>\n\t     \n\t\t \n\t\t   <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  setButtonBackground(\"#fff\");\n\t\t\t  setButtonTextColor(\"#77f\");\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetButtonBackground(\"#77f\");\n\t\t\t\tsetButtonTextColor(\"#fff\");\n\t\t\t  },700);\n\t\t\t  promptAsync({ useProxy });\n             }}\n           >\n\t\t     <View style={[styles.loginButton,{backgroundColor: buttonBackground}]}>\n\t\t\t\t <Text style={[styles.loginButtonText,{color: buttonTextColor}]}>Login with Auth0</Text>\n\t\t\t </View>\n           </Pressable>\n\t   </View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n\tpaddingLeft: 5,\n    //justifyContent: 'center',\n  },\n  validation: {\n    fontSize: 16,\n\tfontWeight: \"bold\",\n\tcolor: \"red\"\n  },\n  loginLogo: {\n\tmarginTop: 30,\n\tmarginLeft: Dimensions.get('window').width / 6\n  },\n  loginText: {\n\t  marginTop: 30,\n      fontSize: 16,\n\t  fontWeight: \"bold\",\n\t // padding: 10\n  },\n  loginButton: {\n\t alignItems: 'center',\n\t marginTop: 50,\n\t padding: 20,\n\t color: \"#fff\",\n     width: Dimensions.get('window').width-20\n             \n  },\n  loginButtonText: {\t\t\n  },\n});\n\nexport default LoginScreen;\n","import React from 'react';\nimport {StatusBar, StyleSheet, Dimensions, Pressable, View, Text, Image } from 'react-native';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as RootNavigation from '../RootNavigation.js';\n\nconst newButtonClick = (l) => {\n\tconsole.log('new button clicked');  \n   // RootNavigation.navigate(\"Compose\");\t\n}\n\nconst profileButtonClick = (l) => {\n\tconsole.log('profile button clicked');\n}\n\nconst IconButton = (props) => {\n\t\n\treturn (\n\t<Pressable\n\t   onPress={props.action}\n\t   style={({ pressed }) => [\n          {\n            backgroundColor: pressed\n              ? 'rgb(210, 230, 255)'\n              : props.bgcolor,\n\t\t\t  color: pressed\n              ? '#000'\n              : '#fff'\n          },\n          styles.iconButton\n        ]}\n\t >\n\t  <MaterialCommunityIcons name={props.name}  size={26} style={[{padding: 15},props.style]}/>\n      </Pressable>\n\t);\n};\n\nconst HeaderBar = (props) => {\n\treturn (\n\t <View style={styles.container}>\n\t  <IconButton name='plus' bgcolor='#694fad' action={() => newButtonClick(props.l)} style={styles.newButton}/>\n\t  <View style={styles.logoView}>\n\t  <Image source={require('../assets/header.jpeg')}  style={{ width: 60, height: 60 }}/>\n\t  </View>\n\t  <IconButton name='account'  bgcolor='#694fad' action={() => profileButtonClick(props.l)} style={styles.profileButton}/>\n     </View>\t\n\t);\n}\n\nconst styles = StyleSheet.create({\n\n  container: {\n\t   width: Dimensions.get('window').width,\n\tflexDirection: 'row',\n\tjustifyContent: 'space-between',\n\tborderBottomWidth:0.8,\n\tmarginLeft: -15\n  },\n  hc: {\n\t  height: 20,\n\t  overflow: 'hidden',\n\t  padding: 20\n  },\n  newButton: {\n\tcolor: \"#fff\"\n  },\n  profileButton: {\n\t color: \"#fff\"\n  }, \n  logoView: {\n\t \n  },\n  logoText: {\n\t  alignItems: 'flex-end',\n  },\n});\n\nexport default HeaderBar;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './LoginScreen.js';\n \nimport HeaderBar from '../components/HeaderBar';\n \n \n const Stack = createStackNavigator();\n\n\nfunction AuthStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"Login\"\t\n\t\tscreenOptions={{\n       // headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"Login\" component={LoginScreen} options={{ title: 'Welcome to Jarvis!' }}/>\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default AuthStack;","import React from 'react';\nimport {Platform, StyleSheet, View, Text, TextInput, Dimensions, ScrollView, Button} from 'react-native';\nimport * as helpers from '../Helpers';\n\nfunction HomeScreen({navigation}){\n \n\t  let items = [];\n\t  let navv = navigation;\n\t\t //console.log(items);\n\t\t \n    return (\n\t\t<View style={styles.container}>\n\t\t   <Text>Welcome to your profile!</Text>\n       <Text>Here is a bit of your information:</Text>\n       <Text>Test</Text>\n\t    </View>\n    );\n  \n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n\tmarginTop: 30,\n\tmarginLeft: 10,\n    //justifyContent: 'center',\n  },\n  titleBar: {\n    width: 100,\n\tmarginTop: 40,\n    paddingLeft: 80,\n\tflexDirection: 'row',\n  },\n  itemsLayout: {\n    flexDirection: 'row',\n\tflex: 1\n  },\n  column: {\n\t  width: 50,\n\t  alignItems: 'center'\n  },\n  formGroup: {\n\t  marginTop: 30,\n\t // padding: 10\n  },\n  loginButton: {\n\t alignItems: 'center',\n\t \n\t marginTop: 30,\n  }\n});\n\nexport default HomeScreen;\n\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeScreen from './HomeScreen.js';\n \nimport HeaderBar from '../components/HeaderBar.js';\n \n \n const Stack = createStackNavigator();\n\n\nfunction AppStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"Home\"\t\n\t\tscreenOptions={{\n        headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"Dashboard\" component={HomeScreen} />\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default AppStack;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {Platform, StyleSheet, View, Pressable, Modal, Text, TextInput, Dimensions, ScrollView, Button} from 'react-native';\nimport * as AuthSession from 'expo-auth-session';\nimport * as helpers from '../Helpers';\nimport UserContext from '../contexts/UserContext';\n\nfunction MoreScreen(){\n\t\n\tconst ctx = useContext(UserContext);\n\tconst pp = () => {\n\t\tconsole.log(\"moving..\");\n\t}\n\tconst [isSMVisible, setIsSMVisible] = useState(false);\n    const [button1TextColor, setButton1TextColor] = useState(\"#fff\");\n    const [button1Background, setButton1Background] = useState(\"orange\");\n    const [button2TextColor, setButton2TextColor] = useState(\"#fff\");\n    const [button2Background, setButton2Background] = useState(\"green\");\n\t\n\tconst confirmSignout = () => {\n\t\tsetIsSMVisible(true);\n\t}\n\t\n\tconst test = async () => {\n          await helpers.schedulePushNotification();\n        }\n\t\t\n\t\tconst signout = async () => {\n\t\n\ttry {\n\t  AuthSession.dismiss();\n    } catch (error) {\n      console.error(error);\n    }\n}\n\t\n\tconst items = [\n\t {key: 'more-3', caption: \"View information about the app.\", btn: \"About\", play: pp},\n\t {key: 'more-4', caption: \"Sign out of your account\", btn: \"Sign out\", play: confirmSignout},\n\t];\n    \n\treturn (\n\t   <View style={styles.container}>\n\t    <Text style={styles.caption}>More options</Text>\n\t\t  {\n\t\t\titems.map(i => ( \n\t        <View style={styles.item}>\n\t\t\t   <Text style={{marginRight: 1}}>{i.caption}</Text>\n               <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  i.play();\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.loginButton,{backgroundColor: \"#694fad\"}]}>\n\t\t\t\t <Text style={[styles.loginButtonText,{color: \"#fff\"}]}>{i.btn}</Text>\n\t\t\t </View>\n           </Pressable>\n\t\t\t   \n\t\t\t</View>\n\t\t\t))\n\t\t  }\n\t\t  \n\t\t   <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={isSMVisible}\n        onRequestClose={() => {\n          //Alert.alert('Modal has been closed.');\n        }}>\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Are you sure?</Text>\n             <View style={{flexDirection: 'row', justifyContent: 'space-between',}}>\n             <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  setButton1Background(\"#fff\");\n\t\t\t  setButton1TextColor(\"orange\");\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetButton1Background(\"orange\");\n\t\t\t\tsetButton1TextColor(\"#fff\");\n\t\t\t  },700);\n\t\t\t  signout();\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.button,{backgroundColor: button1Background}]}>\n\t\t\t\t <Text style={{color: button1TextColor}}>Yes</Text>\n\t\t\t </View>\n           </Pressable>\n           <Pressable\n\t\t\t  onPress={() => {\n              /** Do Something **/\n\t\t\t  console.log(\"moving..\");\n\t\t\t  setButton1Background(\"#fff\");\n\t\t\t  setButton1TextColor(\"green\");\n\t\t\t  setTimeout(() => {\n\t\t\t\tsetButton1Background(\"green\");\n\t\t\t\tsetButton1TextColor(\"#fff\");\n\t\t\t  },700);\n              setIsSMVisible(false);\n             }}\n             style={{width:80,height:40}}\n           >\n\t\t     <View style={[styles.button,{backgroundColor: button1Background}]}>\n\t\t\t\t <Text style={{color: button1TextColor}}>No</Text>\n\t\t\t </View>\n           </Pressable>\n\t\t   </View>\n          </View>\n        </View>\n      </Modal>\n\t   </View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n\tbackgroundColor: '#fff',\n\t//marginTop: StatusBar.currentHeight || 0,\n\twidth: '100%',\n\theight: '100%',\n\tflex: 1\n  },\n  item: {\n\t  flex: 1,\n    padding: 3,\n\tflexDirection: 'row',\n\tbackgroundColor: '#fff',\n\tjustifyContent: 'space-between',\n  },\n    caption: {\n    fontSize: 18,\n\tfontWeight: \"bold\",\n\t//marginTop: StatusBar.currentHeight || 0,\n\t//marginBottom: StatusBar.currentHeight || 0,\n  },\n    centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n    modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50,\n    padding: 20,\n    color: \"#fff\",\n    width: Dimensions.get('window').width-20\n            \n },\n});\n\nexport default MoreScreen;\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport MoreScreen from './MoreScreen.js';\n \nimport HeaderBar from '../components/HeaderBar.js';\n \n \n const Stack = createStackNavigator();\n\n\nfunction MoreStack(){\n  \n\treturn (\n\t   <Stack.Navigator\n\t    initialRouteName=\"More\"\t\n\t\tscreenOptions={{\n        headerTitle: (props) => <HeaderBar {...props} />\n      }}\n\t  >\n\t   <Stack.Screen name=\"More\" component={MoreScreen} />\n\t   </Stack.Navigator>\n\t);\n}\n\n\nexport default MoreStack;\n","//import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { Platform, StyleSheet, View, Text, SafeAreaView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport NetInfo from '@react-native-community/netinfo';\nimport { navigationRef } from './RootNavigation.js';\nimport FlashMessage, { showMessage, hideMessage } from \"react-native-flash-message\";\nimport * as WebBrowser from 'expo-web-browser';\nimport AppIntroSlider from 'react-native-app-intro-slider';\n\nimport * as Notifications from 'expo-notifications';\nimport * as helpers from './Helpers'; \nimport { UserProvider } from './contexts/UserContext';\n\nimport AuthStack from './navigation/AuthStack';\nimport AppStack from './navigation/AppStack';\nimport MoreStack from './navigation/MoreStack';\n\nconst Tab = createMaterialBottomTabNavigator();\n \nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function App() {\n  const [isAppReady, setIsAppReady] = useState(false);\n  const [showApp,setShowApp] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [u, setU] = useState(null);\n  const [name, setName] = useState(null);\n  const [atk, setAtk] = useState(null);\n  const [rtk, setRtk] = useState(null);\n  const [etk, setEtk] = useState('');\n\tconst [online, setOnline] = useState(false);\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  let s = null, nm = \"\", ntt = \"\";\n\n   //Development config\n   const Auth0_Domain = \"https://pensionjar-development.eu.auth0.com\";\n   const Auth0_ClientID = \"LFi1MZQxXQW4Y1vMhEOXN7Sy11naYTcF\";\n const Auth0_ClientSecret = \"b8fUvWYThhkLxOf4d_UsGLBayfl1pCnQTkll9U8qtHrB6VPyFsfeIH7CRdcKhh9-\";\n\n /**\n //Staging config\n   const Auth0_Domain = \"https://pensionjar-staging.eu.auth0.com\";\n   const Auth0_ClientID = \"PAQK5rFTPu2jdg2rSM4I0Nwjcwk8XWkI\";\n const Auth0_ClientSecret = \"_-NCxLhpJlg5q8J6K2LYKyi_1CNu8uwbrU-X0s3IkxiLj3jhCjF37FdquZK78gUM\";\n   **/\n\n\n  const data = [\n\t\t{\n\t\t  title: 'Title 1',\n      icon: \"cash\",\n\t\t  copy: \"This is the copy for the first slide\",\n\t\t  bg: '#59b2ab',\n\t\t},\n\t\t{\n\t\t  title: 'Title 2',\n      icon: \"cash-register\",\n\t\t  copy: \"This is the copy for the second slide\",\n\t\t  bg: '#febe29',\n\t\t},\n\t\t{\n\t\t  title: 'Title 3',\n      icon: \"cash-multiple\",\n\t\t  copy: \"This is the copy for the third slide\",\n\t\t  bg: '#22bcb5',\n\t\t},\n\t  ];\n\n   const _renderItem = item => {\n      let ii = item.item;\n      const webStyle = Platform.OS == \"web\" ? {height: \"100%\"} : null;\n      \n      return (\n        <View style={[styles.slide,{backgroundColor: ii.bg},webStyle]}>\n            <MaterialCommunityIcons name={ii.icon} color=\"#fff\" size={200} />\n            <Text style={styles.title}>{ii.title}</Text>\n            <Text style={styles.copy}>{ii.copy}</Text>\n        </View>\n      );\n    };\n  \n   const _keyExtractor = item => item.title;\n\n\n  const subscribeToNetworkChanges = NetInfo.addEventListener(state => {\n    s = state.isInternetReachable;\n      if(s != online){\n      setOnline(s);\n      if(!s){\n       nm = \"Your device is offline\", ntt = \"danger\";\n      }\n       /**\n         showMessage({\n              message: nm,\n              type: ntt,\n            });\n        **/\n      }\n  });\n  \n  \n    let ctx = {\n          loggedIn: loggedIn,\n          setLoggedIn: setLoggedIn,\n          etk: etk,\n          setEtk: setEtk,\n          atk: atk,\n          setAtk: setAtk,\n          rtk: rtk,\n          setRtk: setRtk,\n          u: u,\n          setU: setU,\n          online: online,\n          setOnline: setOnline\n        };\n    \n    useEffect(() => {\n      async function prepare() {\n        try {\n          //make any API calls you need to do here\n      let rtk = await helpers.getValueFor(\"pa_rtk\"), firstView = await helpers.getValueFor(\"pa_first_view\");\n      let uu = null, credentials = null;\n      \n      if(firstView && firstView == \"false\") setShowApp(true);\n      \n      try {\n      // Retrieve the credentials\n      uu = await helpers.getValueFor(\"pa_u\");\n      if(uu)\n     {\n        if(rtk != null && uu != null){\n          //get auth0 access token using refresh token\n          let refreshTokenData = {\n            grant_type: \"refresh_token\",\n            client_id: Auth0_ClientID,\n            refresh_token: rtk\n          };\n          let url = `${Auth0_Domain}/oauth/token`;\n          \n          const req = new Request(url,{\n            method: 'POST', \n           headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n           },\n           body: helpers._urlEncode(refreshTokenData)\n            });\n          let response2 = await fetch(req);\n          let dt = await response2.json();\n\n           helpers.save('pa_atk',dt.access_token);\n           setAtk(dt.access_token);\n           setU(JSON.parse(uu));\n           setLoggedIn(true);\n      }\n      }\n      else\n      {\n         console.log('No credentials stored');\n      }\n    }\n   catch (error) {\n      console.log(\"SecureStore couldn't be accessed!\", error);\n    }\n  \n      \n          // Artificially delay for two seconds to simulate a slow loading\n          // experience. Maybe remove this in production..\n          await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      \n      try{\n        // Unsubscribe to these updates:\n            subscribeToNetworkChanges();\n      }\n      catch(e){\n        console.warn(e);\n      }\n    \n      \n        } catch (e) {\n          console.warn(e);\n        } finally {\n          // Tell the application to render\n          setIsAppReady(true);\n        }\n      }\n  \n      prepare();\n    }, []);\n    \n    useEffect(() => {\n      if(online){\n      helpers.registerForPushNotificationsAsync().then(token => {\n      //alert('About to get push token for push notification!');\n    \n      //alert(`etk in registerForPushNotificationsAsync: ${token}`);\n      });\n  \n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n        setNotification(notification);\n      });\n  \n      responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n        console.log('response: ',response);\n      });\n  \n      return () => {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n        Notifications.removeNotificationSubscription(responseListener.current);\n      };\n      }\n    }, [online]);\n\n  \n  let irn = loggedIn ? \"AppStack\" : \"AuthStack\";\n\n  if(showApp){\n    return (\n      <UserProvider value={ctx}>\n    <NavigationContainer ref={navigationRef}>\n       <Tab.Navigator\n       initialRouteName={irn}\n         activeColor=\"#f0edf6\"\n         inactiveColor=\"#3e2465\"\n         barStyle={{ backgroundColor: '#694fad' }}\n             \n     >\n     {loggedIn ? (\n     <>\n     <Tab.Screen\n         name=\"AppStack\"\n         component={AppStack}\n         options={{\n           tabBarLabel: 'Dashboard',  \n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"view-dashboard\" color={color} size={26} />\n           ),\n         }}\n       />\n       <Tab.Screen\n         name=\"MoreStack\"\n         component={MoreStack}\n         options={{\n           tabBarLabel: 'More',  \n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"dots-horizontal-circle\" color={color} size={26} />\n           ),\n         }}\n       />\n       \n     </>\n     \n     ) : (\n      <Tab.Screen\n         name=\"AuthStack\"\n         component={AuthStack}\n         options={{\n           tabBarLabel: 'Login',\n           tabBarIcon: ({ color }) => (\n             <MaterialCommunityIcons name=\"account\" color={color} size={26} />\n           ),\n         }}\n       />\n     )}\n        \n       </Tab.Navigator>\n     </NavigationContainer>\n     <StatusBar style=\"auto\" />\n       <FlashMessage position=\"bottom\" /> \n      </UserProvider>\n    );\n  }\n  else{\n    return (\n      <>\n      <View style={{flex: 1}}>\n        <StatusBar translucent backgroundColor=\"transparent\" />\n        <AppIntroSlider\n          keyExtractor={_keyExtractor}\n          renderItem={_renderItem}\n          bottomButton\n          showSkipButton\n          showPrevButton\n          data={data}\n          onDone={() => {setShowApp(true); helpers.save(\"pa_first_view\",\"false\");}}\n        />\n      </View>\n      <StatusBar style=\"auto\" />\n      </>\n    );\n }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  slide: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 96, // Add padding to offset large buttons and pagination in bottom of page\n  },\n  title: {\n    fontSize: 22,\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 10\n  },\n  copy: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 10\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/header.7f96e52d.jpeg\";"],"sourceRoot":""}